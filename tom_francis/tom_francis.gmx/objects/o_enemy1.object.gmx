<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_enemy1</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_enemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

max_hp = 50
hp = max_hp
triggered = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
MOVEMENT
*/

//calls hit detection
event_inherited()


//shrinks the enemy as it gets hit    
image_yscale = hp / max_hp
image_xscale = image_yscale

/*
if (triggered == 0)
{
    closest_bullet = instance_nearest(x, y, o_bullet_parent)
    if (distance_to_object(closest_bullet) &lt; 100)
        triggered = 1
    

    //speed should be around 3
    speed = 180/room_speed
    
    
    //if the player exists, circle around it
    if (instance_exists(o_player))
    {
        direction = point_direction(x, y, o_player.x, o_player.y) + 90
        speed = sqrt(distance_to_object(o_player)/10)
    }
    
    
    
    
    //if it's going out of bounds, get it back in bounds
    if (y &lt; 50)
    {
        if (direction &gt; 90 &amp;&amp; direction &lt;= 270)
            direction = 180
        else
            direction = 0
        y = 50
    }
    
    else if (y &gt; room_height - 50)
    {
        if (direction &gt; 90 &amp;&amp; direction &lt;= 270)
            direction = 180
        else
            direction = 0
        y = room_height - 50
    }
    
    if (x &lt; 50)
    {
        if (direction &gt; 0 &amp;&amp; direction &lt;= 180)
            direction = 90
        else
            direction = 270
        x = 50
    }
    
    
    else if (x &gt; room_width - 50)
    {
        if (direction &gt; 0 &amp;&amp; direction &lt;= 180)
            direction = 90
        else
            direction = 270
        x = room_width - 50
    }
}
*/



if (triggered == 0)
{
    closest_bullet = instance_nearest(x, y, o_bullet_parent)
    if (distance_to_object(closest_bullet) &lt; 100)
        triggered = 1
    

    //speed should be around 3
    speed = 180/room_speed
    
    
    //if the player exists, circle around it
    if (instance_exists(o_player))
    {
        direction = point_direction(x, y, o_player.x, o_player.y) + 90
        speed = sqrt(distance_to_object(o_player)/10)
    }
    
    
    
    
    //if it's going out of bounds, get it back in bounds
    if (y &lt; 50)
    {
        vspeed = 0
        y = 50
    }
    
    else if (y &gt; room_height - 50)
    {
        vspeed = 0
        y = room_height - 50
    }
    
    if (x &lt; 50)
    {
        hspeed = 0
        x = 50
    }
    
    
    else if (x &gt; room_width - 50)
    {
        hspeed = 0
        x = room_width - 50
    }
}





if (triggered == 1)
{
    speed = 480/room_speed
    if (instance_exists(o_player))
    {
        direction = point_direction(x, y, o_player.x, o_player.y)
    }
    else
    {
        instance_destroy()
    }
}

image_angle = direction



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>12,12</point>
    <point>12,12</point>
  </PhysicsShapePoints>
</object>
